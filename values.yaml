# Default values for bus-reservation.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
# Number of pod replicas to run

image:
  repository: yassirdevopseng/bus_reservation
  # Docker image repository
  pullPolicy: IfNotPresent
  # Image pull policy
  tag: "1.4"
  # Image tag/version

serviceAccount:
  create: false
  # Do not create a new service account (using existing one)
  name: bus-reservation-argocd
  # Name of the service account to use
  automount: true
  # Automatically mount the service account token in the pod

service:
  type: NodePort
  # Service type to expose pods (NodePort in this case)
  port: 80
  # Port on which the service is exposed

livenessProbe:
  httpGet:
    path: /
    port: 80
  # Probe to check if the container is alive
  timeoutSeconds: 1
  # Timeout for the probe request
  periodSeconds: 10
  # Interval between probe requests
  failureThreshold: 3
  # Number of failures before marking pod unhealthy

readinessProbe:
  httpGet:
    path: /
    port: 80
  # Probe to check if the container is ready to serve traffic
  timeoutSeconds: 1
  periodSeconds: 10
  failureThreshold: 3

volumes:
  - name: kube-api-access
    projected:
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            name: kube-root-ca.crt
        - downwardAPI: {}
  # Volume to provide service account credentials and config data to pod

volumeMounts:
  - name: kube-api-access
    mountPath: /var/run/secrets/kubernetes.io/serviceaccount
    readOnly: true
  # Mount path inside container for service account tokens

tolerations:
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
  # Allows pod to tolerate node conditions like NotReady or Unreachable for 5 minutes

  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80

livenessProbe:
  httpGet:
    path: /
    port: 80
readinessProbe:
  httpGet:
    path: /
    port: 80

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
